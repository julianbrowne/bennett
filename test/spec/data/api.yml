#
#    API Specification
#

---

general:
  test_name: "My Fake API"

session:

  login:
    desc: "Login and start user session"
    url: "/login"
    method: "post"
    encoding: "form"
    response: 201
    body: user_details
    remember: "login"
    latency: 500
    schema: >
        {
            "title": "Login Session Schema",
            "type": "object",
            "properties": {
                "hubIds": {
                    "type": "array"
                },
                "ApiSession": {
                    "type": "string"
                }
            }
            "required": [
                "hubIds",
                "ApiSession"
            ]
        }

  logout:
    desc: "End user session"
    url: "/logout"
    method: "post"
    response: 200
    cookies:
      ApiSession: "({ recall: 'login.ApiSession' })"

  password_reset:
    desc: "Reset user password"
    url: "/passwordreset"
    method: "post"
    response: 201
    encoding: "form"
    body: user_details.username

  password_reset_check:
    desc: "Check password reset"
    url: "/passwordreset"
    method: "get"
    response: 200
    encoding: "form"
    body: password_details.code

  set_new_password:
    desc: "Set new password"
    url: "/passwordreset"
    method: "put"
    response: 201
    encoding: "form"
    body: password_details

user:

  get_user:
    desc: "Get user details"
    url: "/users/{username}"
    dataroot: user_details
    method: "get"
    response: 200
    cookies:
      ApiSession: "({ recall: 'login.ApiSession' })"
    schema: >
      {
        "username":    { "type": "string" },
        "firstname":   { "type": "string" },
        "lastname":    { "type": "string" },
        "address":     { "type": "string" },
        "pin":         { "type": "string" },
        "city":        { "type": "string" },
        "county":      { "type": "string" },
        "postcode":    { "type": "string" },
        "country":     { "type": "string" },
        "answer":      { "type": "string" },
        "userlevel":   { "type": "string" },
        "dob":         { "type": "string" },
        "currency":    { "type": "string" },
        "language":    { "type": "string" },
        "temperature": { "type": "string" },
        "phone":       { "type": "string" },
        "email":       { "type": "string" },
        "mobile":      { "type": "string" }
      }

  search:
    desc: "Search users"
    url: "/users/all/search"
    body: search.query
    encoding: "form"
    method: "get"
    response: 200
    cookies:
      ApiSession: "({ recall: 'login.ApiSession' })"

  update:
    desc: "Update user details"
    url: "/users/{username}"
    dataroot: user_details
    method: "post"
    response: 200
    cookies:
      ApiSession: "({ recall: 'login.ApiSession' })"

  read_settings:
    desc: "Fetch user settings"
    url: "/users/{username}/settings/{setting}"
    dataroot: user_details
    method: "get"
    response: 200
    cookies:
      ApiSession: "({ recall: 'login.ApiSession' })"

  update_settings:
    desc: "Update user settings"
    url: "/users/{username}/settings/{setting}"
    dataroot: user_details
    body: change_data.setting
    method: post
    response: 200
    cookies:
      ApiSession: "({ recall: 'login.ApiSession' })"

  weather:
    desc: "User weather"
    url: "/users/{username}/weather"
    dataroot: user_details
    method: get
    response: 200
    cookies:
      ApiSession: "({ recall: 'login.ApiSession' })"

test:
  expect_fail:
    desc: "404 test"
    url: "/nosuchapi/{username}"
    dataroot: user_details
    method: "get"
    response: 200
